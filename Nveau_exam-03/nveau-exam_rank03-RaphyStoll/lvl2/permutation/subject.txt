--------------------------------------------------
Nom de l'exercice: permutation  
Fichiers attendus: permutation.c  
Fonctions autorisées: printf, malloc, free, strdup, qsort, strncpy, strlen, exit  
--------------------------------------------------

Écrire un programme qui prend en paramètre une chaîne de caractères et qui affiche, sur la sortie standard, 
toutes les permutations possibles des caractères de cette chaîne, 
organisées en colonnes verticales, suivies d'une nouvelle ligne.

 Spécifications : 

- Le programme doit générer toutes les permutations uniques de la chaîne donnée.
- Les permutations doivent être affichées de manière verticale.  
  Pour une chaîne de longueur  n , il y aura  n!  permutations. Ces permutations 
  doivent être disposées en  (n-1)!  lignes et  n  colonnes, de sorte que la lecture des 
  colonnes de haut en bas donne l'ordre suivant :

  Par exemple, pour l'entrée `"abc"`, la sortie devra être :

  ```
  abc bac cab
  acb bca cba
  ```

  (Lorsque vous pipez la sortie avec `cat -e`, chaque ligne se termine par un symbole `$`.)

- Si le nombre de paramètres n'est pas exactement 1, le programme doit simplement afficher une nouvelle ligne.
- L'entrée, lorsqu'elle est fournie, sera toujours valide.
-  Contrainte :  Vous n'êtes pas autorisé(e) à utiliser des boucles (ex. : `for`, `while`, etc.). Toutes les itérations doivent être réalisées par récursion.

 Exemples : 

```
$> ./permutation abc | cat -e
abc bac cab$
acb bca cba$
$> ./permutation | cat -e
$
$> ./permutation hello | cat -e
[la sortie doit afficher toutes les permutations de "hello" disposées verticalement]
```

Bonne chance !